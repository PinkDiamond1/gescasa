<?php

namespace Gestor\ExpedientesBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ExpedienteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ExpedienteRepository extends EntityRepository
{
    
   public function queryTodosExpedientes(){
        $em = $this->getEntityManager();       
        
        $consulta = $em->getRepository('ExpedientesBundle:Expediente')->findAll();
        
        return $consulta;        
  }    
  
    public function queryTodosExpedientesDesc(){
        $em = $this->getEntityManager();
        
        $consulta = $em->createQuery('
            SELECT e FROM ExpedientesBundle:Expediente e
            ORDER BY e.fechaInicio DESC');

        return $consulta;
    }
    
    public function queryFiltrarExpedientesEstado($estado){
        $em = $this->getEntityManager();
        
        $id = $em->getRepository('GestionBundle:infoTipoEstadoExpediente')->findOneBy(array('descripcion'=>$estado));
                
        $consulta = $em->getRepository('ExpedientesBundle:Expediente')
                ->findBy(array('estado'=>$id->getId()),
                         array('fechaInicio'=>'DESC'));
        
        return $consulta;
    }
    
    public function queryFiltrarExpedientesTitulo($titulo){
       $em = $this->getEntityManager();
 
        $qb = $em->createQueryBuilder();
        
        $qb->add('select','e')
           ->add('from','ExpedientesBundle:Expediente e')
           ->add('where','e.titulo LIKE :titulo')
           ->add('orderBy','e.fechaInicio', 'DESC')
           ->setParameter('titulo', '%'.$titulo.'%');
           
        $consulta=$qb->getQuery();
        
        return $consulta;
    }
    
       public function queryFiltrarExpedientesAvanzado($datos){
           
            $tit = $datos['titulo'];
            $ref = $datos['referencia'];
            
            $est = $datos['estado'];
            if ($est)
                $est = $est->getId();
            
            $emp = $datos['empresa'];
            if ($emp)
                $emp = $emp->getId();
            
            $adj = $datos['adjudicatario'];
            if ($adj)
                $adj = $adj->getId();
            
            $fIniDe = $datos['fechaInicioDe'];
            if ($fIniDe instanceof \DateTime)
                $fIniDe = $fIniDe->format('Y-m-d');
            
            $fIniA = $datos['fechaInicioA'];
            if ($fIniA instanceof \DateTime)
                $fIniA = $fIniA->format('Y-m-d');
            
            $fFinDe = $datos['fechaFinDe'];
            if ($fFinDe instanceof \DateTime)
                $fFinDe = $fFinDe->format('Y-m-d');
            
            $fFinA = $datos['fechaFinA'];
            if ($fFinA instanceof \DateTime)
                $fFinA = $fFinA->format('Y-m-d');
            
            $impD = $datos['importeDe'];
            $impD = substr($impD, 0, strpos($impD, ' '));
            $impD = str_replace('.', '', $impD);
            $impD = str_replace(',', '.', $impD);
            
            $impA = $datos['importeA'];
            $impA = substr($impA, 0, strpos($impA, ' '));
            $impA = str_replace('.', '', $impA);
            $impA = str_replace(',', '.', $impA);
                        
            $sql = '1 = 1';
            if ($tit)
                $sql .= " AND e.titulo LIKE '%$tit%'"; 
            if ($ref)
                $sql .= " AND e.referencia='$ref'";
            if ($est)
                $sql .= " AND e.estado='$est'";
            if ($emp)
                $sql .= " AND e.empresa='$emp'";
            if ($adj)
                $sql .= " AND e.estado='$adj'";
            if ($fIniDe && $fIniA)
                $sql .= " AND e.fechaInicio BETWEEN '$fIniDe' AND '$fIniA'";
            if ($fFinDe && $fFinA)
                $sql .= " AND e.fechaFin BETWEEN '$fFinDe' AND '$fFinA'";            
            if ( (!is_null($impD) && is_numeric($impD)) && (!is_null($impA) && is_numeric($impA)))
                $sql .= " AND e.importe BETWEEN $impD AND $impA";
                     
            $em = $this->getEntityManager();
            $qb = $em->createQueryBuilder();
        
            $qb->add('select','e')
           ->add('from','ExpedientesBundle:Expediente e')
           ->add('where',$sql)
           ->add('orderBy','e.fechaInicio DESC');
           
        $consulta=$qb->getQuery();
        
        return $consulta;
    }
    
    public function findTodosExpedientesDesc(){
        return $this->queryTodosExpedientesDesc()->getResult();
    }
}
